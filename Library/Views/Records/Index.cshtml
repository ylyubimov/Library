@model List<Library.Models.Record>
@helper DisplayBooks(bool recommended)
{
<div class="container view">
    <div class="row">
            @foreach (var item in Model)
            {
                if (!(item.Recomended ^ recommended))
                {
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <div class="mini-box item title">
                            <h2>
                                @Ajax.ActionLink(item.RecordName, "Modal", "Records", new { id = item.RecordId }, new AjaxOptions { UpdateTargetId = "container" }, new { data_toggle = "modal", data_target = "#myModal" })
                            </h2>
                        </div>

                        <div class="mini-box item">
                            <a href=@Url.Action("Record/" + item.RecordId, "Records")>
                                @{var path = "/Data/" + item.ISBN + ".png";}
                                @if (File.Exists(System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory + "Data/", item.ISBN + ".png")))
                                {
                                    <img src="@path" width="100%" />
                                }
                                else
                                {
                                    <img src="~/Data/default.jpg" width="100%" />
                                }
                            </a>

                            <p><h5>@Html.DisplayFor(modelItem => item.RecordDescription)</h5></p>
                            <h4>
                                Издательство: <br />
                                @{Library.Models.LibraryContext q = new Library.Models.LibraryContext();
                                    var publisher = (from p in q.Publishers where item.PublisherId == p.PublisherId select p).FirstOrDefault();
                                }
                                <p class="publisher">@Html.DisplayFor(modelItem => publisher.PublisherName)</p>
                            </h4>
                            @if (File.Exists(System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory + "Data/", item.ISBN + ".pdf")) ||
                                File.Exists(System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory + "Data/", item.ISBN + ".djvu")) ||
                                File.Exists(System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory + "Data/", item.ISBN + ".txt")))
                            {
                                @Html.ActionLink("Скачать", "downloadFile", "Records", new { id = item.RecordId }, new { @class = "btn btn-success" });
                            }


                            @if (User.Identity.IsAuthenticated)
                            {
                                @Html.ActionLink("Редактировать", "Edit", "Records", new { id = item.RecordId }, new { @class = "btn btn-success" })
                            }
                        </div>
                    </div>
                    }
                }
        </div>
</div>
}

<div>
    <h1 class="library-index">
        Здесь собраны все книги нашей библиотеки.
    </h1>
</div>

<h2>Избранные книги:</h2>
@DisplayBooks(true);
    
<h2>Основная коллекция:</h2>
@DisplayBooks(false);

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div id="container">
        </div>
    </div>
</div>